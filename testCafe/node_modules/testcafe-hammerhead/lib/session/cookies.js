'use strict';

exports.__esModule = true;

var _toughCookie = require('tough-cookie');

var _cookieLimit = require('./cookie-limit');

var _cookieLimit2 = _interopRequireDefault(_cookieLimit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Cookies = function () {
    function Cookies() {
        _classCallCheck(this, Cookies);

        this.cookieJar = new _toughCookie.CookieJar();
    }

    Cookies.prototype._set = function _set(url, cookies, isClient) {
        var _this = this;

        cookies = Array.isArray(cookies) ? cookies : [cookies];

        cookies.forEach(function (cookieStr) {
            if (cookieStr.length > _cookieLimit2.default) return;

            _this.cookieJar.setCookieSync(cookieStr, url, {
                http: !isClient,
                ignoreError: true,
                loose: true
            });
        });
    };

    Cookies.prototype.serializeJar = function serializeJar() {
        return JSON.stringify(this.cookieJar.serializeSync());
    };

    Cookies.prototype.setJar = function setJar(serializedJar) {
        this.cookieJar = serializedJar ? _toughCookie.CookieJar.deserializeSync(JSON.parse(serializedJar)) : new _toughCookie.CookieJar();
    };

    Cookies.prototype.setByServer = function setByServer(url, cookies) {
        this._set(url, cookies, false);
    };

    Cookies.prototype.setByClient = function setByClient(url, cookies) {
        this._set(url, cookies, true);
    };

    Cookies.prototype.getClientString = function getClientString(url) {
        return this.cookieJar.getCookieStringSync(url, { http: false });
    };

    Cookies.prototype.getHeader = function getHeader(url) {
        return this.cookieJar.getCookieStringSync(url, { http: true }) || null;
    };

    return Cookies;
}();

exports.default = Cookies;
module.exports = exports['default'];